/* PEDESTRIAN AND PEDALCYLIST FATALITIES - CRASH, NONOCCUPANT, AND STRIKING VEHICLE/DRIVER CHARACTERISTICS */
/* BRIANA THRIFT, FHWA FELLOW */
/* PROGRAM EDITED BY TONJA LINDSEY, NHTSA/NCSA */
/* FARS 2001-2017 */

/* ESTABLISH FARS LIBRARIES (DATA AND FORMATS) IF NOT ALREADY DONE */
%INCLUDE 'C:\Users\Briana.Thrift.ctr\Documents\Rural_NonOccupant\SAS Programs\Old SAS Programs\AUTOEXEC.SAS';  /* THIS CODE POINTS TO FARS FILES LOCATED ON THE NHTSA/NCSA LOCAL NETWORK */

/* LOCATION OF CITY AND COUNTY NAMES DATASET */
LIBNAME CITYCNTY 'C:\Users\Briana.Thrift.ctr\Documents\Rural_NonOccupant\SAS Programs\Old SAS Programs';  /* LOCATION OF CITY NAME (CITY) AND COUNTY NAME (COUNTY) SAS DATASETS ON TONJA'S LOCAL NETWORK */
*LIBNAME CITYCNTY 'H:\FARS DATA\CITYCNTY';  /* LOCATION OF CITY NAME (CITY) AND COUNTY NAME (COUNTY) SAS DATASETS ON BRIANA'S LOCAL NETWORK */

LIBNAME OUT 'C:\Users\Briana.Thrift.ctr\Desktop';

/* CUSTOMIZED FORMATS */

PROC FORMAT;
  VALUE PERFMT
  1 = 'Driver of a Motor Vehicle in Transport'
  2 = 'Passenger of a Motor Vehicle in Transport'
  3 = 'Occupant of a Motor Vehicle Not in Transport'
  5 = 'Pedestrian'
  6,7 = 'Pedalcyclist'
  9 = 'Unknown Occupant Type in a Motor Vehicle in Transport';

  VALUE LANDFMT
  1 = 'Rural'
  2 = 'Urban'
  3 = 'Unknown';

  VALUE SPDFMT
  0 = 'Not Speeding'
  1 = 'Speeding';

  VALUE ALCTFMT
  1 = 'Tested With Known Results'
  2 = 'Tested With Unknown Results'
  3 = 'Not Tested'
  4 = 'Unknown If Tested';

  VALUE BODYFMT
  1 = 'Passenger Car'
  2 = 'Light Truck - Pickup'
  3 = 'Light Truck - Utility'
  4 = 'Light Truck - Van'
  5 = 'Light Truck - Other'
  6 = 'Large Truck'
  7 = 'Motorcycle'
  8 = 'Bus'
  9 = 'Other/Unknown Vehicle'
  10 = 'Missing - No Striking Vehicle Match';

  VALUE RESTFMT
  1 = 'Restrained'
  2 = 'Unrestrained'
  3 = 'Unknown';

  VALUE RACEFMT
  1 = 'White'
  2 = 'Black'
  3 = 'American Indian (inc. Alaska Native)'
  4 = 'Asian'
  5 = 'Native Hawaiian or Other Pacific Islander'
  6 = 'Multiple Races'
  7 = 'All Other Races'
  8 = 'Unknown';

  VALUE HISPFMT
  1 = 'Non-Hispanic'
  2 = 'Hispanic'
  3 = 'Unknown';

  VALUE HRACEFMT  /* OMB CLASSIFICATIONS */
  1 = 'Hispanic'
  2 = 'White, Non-Hispanic'
  3 = 'Black, Non-Hispanic'
  4 = 'American Indian, Non-Hispanic/ Unknown'
  5 = 'Asian, Non-Hispanic/ Unknown'
  6 = 'Native Hawaiian or Other Pacific Islander, Non-Hispanic/ Unknown'
  7 = 'Multiple Races, Non-Hispanic/ Unknown'
  8 = 'All Others'
  9 = 'Unknown';
RUN;

/* CLEAR THE APPENDED DATASETS EVERTIME YOU RUN THE CODE TO AVOID APPENDING PREVIOUSLY CREATED DATASETS */
PROC DATASETS NOLIST;
  DELETE PEDS_2001_2008
         PEDS_2009
         PEDS_2010_2014
         PEDS_2015_2017;
QUIT;

/**********************************************************/
/* RUN A MACRO LOOP TO APPEND DATA FROM 2001 TO 2017      */
/* GROUP THE DATA YEARS BASED ON CONSISTENCY IN VARIABLES */
/**********************************************************/

%MACRO REPEAT;
%DO Y=2017 %TO 2001 %BY -1;  /* RUN LOOP FROM LATEST TO EARLIEST YEAR DESIRED */

/* CREATE MACROS TO ACCOUNT FOR VARIABLE NAME CHANGES THROUGH THE YEARS */

/* NONOCCUPANT STRIKING VEHICLE NUMBER - VARIABLE NAME CHANGED IN 2010 */
%IF &Y<2011 %THEN %DO;
  %LET STRVEH_VAR=N_MOT_NO;
  %LET REN_STRVEH=%STR(RENAME=(N_MOT_NO=STR_VEH));
%END;
%ELSE %IF &Y>2010 %THEN %DO;
  %LET STRVEH_VAR=STR_VEH;
  %LET REN_STRVEH= ;
%END;

/* LAND USE AND ROADWAY FUNCTION VARIABLES */
%IF &Y<1981 %THEN %LET ROAD=CL_TWAY;
%ELSE %IF &Y>1980 AND &Y<2015 %THEN %LET ROAD=ROAD_FNC;
%ELSE %IF &Y>2014 %THEN %LET ROAD=FUNC_SYS;

%IF &Y<1987 %THEN %LET LANDU=LAND_USE;
%ELSE %IF &Y>1986 AND &Y<2015 %THEN %LET LANDU=ROAD_FNC;
%ELSE %IF &Y>2014 %THEN %LET LANDU=RUR_URB;

/* THE DRIVER SPEEDING RELATED ELEMENT (SPEEDREL) WAS INTRODUCED IN 2009
   PRIOR TO 2009, SPEEDING DRIVERS WAS OBTAINED FROM DRIVER RELATED FACTORS (DR_CF1-DR_CF4), WHICH ARE LOCATED ON THE VEHICLE FILE */

%IF &Y < 1997 %THEN %DO;
   %LET DRCF=DR_CF1-DR_CF3;
   %LET SPDFCTR=(DR_CF1=44 OR DR_CF2=44 OR DR_CF3=44);
%END;
%ELSE %IF &Y=1997 %THEN %DO;
   %LET DRCF=DR_CF1-DR_CF4;
   %LET SPDFCTR=(DR_CF1=44 OR DR_CF2=44 OR DR_CF3=44 OR DR_CF4=44);
%END;
%ELSE %IF &Y > 1997 AND &Y < 2008 %THEN %DO;
  %LET DRCF=DR_CF1-DR_CF4;
  %LET SPDFCTR=(DR_CF1 IN (44,46) OR DR_CF2 IN (44,46) OR DR_CF3 IN (44,46) OR
                DR_CF4 IN (44,46));
%END;
%ELSE %IF &Y=2008 %THEN %DO;
  %LET DRCF=DR_CF1-DR_CF4;
  %LET SPDFCTR=(DR_CF1 IN (43,44,46) OR DR_CF2 IN (43,44,46) OR DR_CF3 IN (43,44,46) OR
                DR_CF4 IN (43,44,46));
%END;
%ELSE %IF &Y > 2008 AND &Y < 2013 %THEN %DO;
  %LET DRCF=SPEEDREL;
  %LET SPDFCTR=(SPEEDREL=1);
%END;
%ELSE %IF &Y > 2012 %THEN %DO;
  %LET DRCF=SPEEDREL;
  %LET SPDFCTR=(SPEEDREL IN (2,3,4,5));
%END;

/**************************/
/* DATA YEARS 2001 - 2008 */
/**************************/

%IF &Y>2000 AND &Y<2009 %THEN %DO;

/* CREATE DATASETS FOR 1) PEDESTRIAN AND PEDALCYCLIST FATALITIES AND 2) DRIVERS INVOLVED AND ATTACH
   THEIR IMPUTED ALCOHOL DATA
   RENAME P1-P10 TO D1-D10 IN THE DRIVER (DRV) FILE TO DIFFERENTIATE FROM THE IMPUTED ALCOHOL
   VARIABLES (P1-P10) FOR THE PEDESTRIANS AND PEDALCYCLISTS IN THE PED FILE */
DATA PED (KEEP=ST_CASE PER_TYP AGE SEX DRINKING ALC_RES HOSPITAL DOA DEATH_MO DEATH_YR LAG_HRS LAG_MINS
               RACE HISPANIC LOCATION INJ_SEV P1-P10 &STRVEH_VAR &REN_STRVEH)
     DRV (RENAME=(DRINKING=DRV_DRINKING ALC_RES=DRV_ALC_RES AGE=DRV_AGE SEX=DRV_SEX
                  P1=D1 P2=D2 P3=D3 P4=D4 P5=D5 P6=D6 P7=D7 P8=D8 P9=D9 P10=D10));
  MERGE FARS&Y..PERSON 
        FARS&Y..MIPER;  /* IMPUTED ALCOHOL DATASET */
  BY ST_CASE VEH_NO PER_NO;
  IF (PER_TYP IN (1,2,3,9,5,6,7) AND INJ_SEV=4) OR PER_TYP=1;

  IF (PER_TYP IN (1,2,3,9,5,6,7) AND INJ_SEV=4) THEN OUTPUT PED;  /* OUTPUT TO PED FILE */
  ELSE IF PER_TYP=0 THEN OUTPUT DRV;  /* OUTPUT TO DRIVER FILE */
RUN;

/* GET VEHICLES, ALONG WITH ANY ASSOCIATED DRIVER DATA */
DATA VEH;
  MERGE FARS&Y..VEHICLE (KEEP=ST_CASE VEH_NO MAKE MODEL MOD_YEAR BODY_TYP DR_CF1-DR_CF4 TRAV_SP
	                          HIT_RUN REG_STAT OWNER GVWR M_HARM IMPACT1 DEATHS DR_ZIP PREV_ACC
	                          PREV_SUS PREV_DWI PREV_SPD PREV_OTH FIRST_YR LAST_YR VIOLCHG1-VIOLCHG3 IN=A)
        DRV;
  BY ST_CASE VEH_NO;
  IF A;
RUN;

/* ATTACH ACCIDENT DATA TO PED DATA */
DATA ACC_PED;
  MERGE FARS&Y..ACCIDENT (KEEP=ST_CASE STATE CITY COUNTY VE_FORMS HARM_EV ROAD_FNC
                               LGT_COND WEATHER LATITUDE LONGITUD SP_LIMIT)
        PED (IN=A);
  BY ST_CASE;
  IF A;
RUN;

/* RENAME THE PED'S STRIKING VEHICLE NUMBER (N_MOT_NO OR STR_VEH) TO VEH_NO */
DATA PED1;
  SET ACC_PED;
  /* RENAME THE PED'S STRIKING VEHICLE NUMBER (N_MOT_NO OR STR_VEH) TO VEH_NO 
     SO THAT IT CAN BE MERGED WITH THEIR STRIKING VEHICLE */
  RENAME STR_VEH=VEH_NO;
RUN;
  
PROC SORT DATA=PED1; BY ST_CASE VEH_NO;  RUN;

/* ATTACH VEHICLE/DRIVER DATA TO PED FATALITIES */
DATA PED_VEH;
  MERGE VEH
        PED1 (IN=A);
  BY ST_CASE VEH_NO;
  IF A;
  YEAR=&Y;  /* DATA YEAR */
RUN;

PROC APPEND BASE=PEDS_2001_2008 DATA=PED_VEH FORCE;  RUN;

%END;  /* END 2001 TO 2008 */

/*********************************************************************/

/******************/
/* DATA YEAR 2009 */
/******************/

%ELSE %IF &Y=2009 %THEN %DO;

/* CREATE DATASETS FOR 1) PEDESTRIAN AND PEDALCYCLIST FATALITIES AND 2) DRIVERS INVOLVED AND ATTACH
   THEIR IMPUTED ALCOHOL DATA
   RENAME P1-P10 TO D1-D10 IN THE DRIVER (DRV) FILE TO DIFFERENTIATE FROM THE IMPUTED ALCOHOL
   VARIABLES (P1-P10) FOR THE PEDESTRIANS AND PEDALCYCLISTS IN THE PED FILE */
DATA PED (KEEP=ST_CASE PER_TYP AGE SEX DRINKING ALC_RES HOSPITAL DOA DEATH_MO DEATH_YR LAG_HRS LAG_MINS
               RACE HISPANIC LOCATION INJ_SEV P1-P10 &STRVEH_VAR &REN_STRVEH)
     DRV (RENAME=(DRINKING=DRV_DRINKING ALC_RES=DRV_ALC_RES AGE=DRV_AGE SEX=DRV_SEX
                  P1=D1 P2=D2 P3=D3 P4=D4 P5=D5 P6=D6 P7=D7 P8=D8 P9=D9 P10=D10));
  MERGE FARS&Y..PERSON 
        FARS&Y..MIPER;  /* IMPUTED ALCOHOL DATASET */
  BY ST_CASE VEH_NO PER_NO;
  IF (PER_TYP IN (1,2,3,9,5,6,7) AND INJ_SEV=4) OR PER_TYP=1;

  IF (PER_TYP IN (1,2,3,9,5,6,7) AND INJ_SEV=4) THEN OUTPUT PED;  /* OUTPUT TO PED FILE */
  ELSE IF PER_TYP=0 THEN OUTPUT DRV;  /* OUTPUT TO DRIVER FILE */
RUN;

/* GET VEHICLES, ALONG WITH ANY ASSOCIATED DRIVER DATA */
DATA VEH;
  MERGE FARS&Y..VEHICLE (KEEP=ST_CASE VEH_NO MAKE MODEL MOD_YEAR BODY_TYP SPEEDREL TRAV_SP
	                          HIT_RUN REG_STAT OWNER GVWR M_HARM IMPACT1 DEATHS DR_ZIP PREV_ACC
	                          PREV_SUS PREV_DWI PREV_SPD PREV_OTH FIRST_YR LAST_YR VIOLCHG1-VIOLCHG3 IN=A)
        DRV;
  BY ST_CASE VEH_NO;
  IF A;
RUN;

/* ATTACH ACCIDENT DATA TO PED DATA */
DATA ACC_PED;
  MERGE FARS&Y..ACCIDENT (KEEP=ST_CASE STATE CITY COUNTY VE_FORMS HARM_EV ROAD_FNC
                               LGT_COND WEATHER LATITUDE LONGITUD SP_LIMIT)
        PED (IN=A);
  BY ST_CASE;
  IF A;
RUN;

/* RENAME THE PED'S STRIKING VEHICLE NUMBER (N_MOT_NO OR STR_VEH) TO VEH_NO */
DATA PED1;
  SET ACC_PED;
  /* RENAME THE PED'S STRIKING VEHICLE NUMBER (N_MOT_NO OR STR_VEH) TO VEH_NO 
     SO THAT IT CAN BE MERGED WITH THEIR STRIKING VEHICLE */
  RENAME STR_VEH=VEH_NO;
RUN;
  
PROC SORT DATA=PED1; BY ST_CASE VEH_NO;  RUN;

/* ATTACH VEHICLE/DRIVER DATA TO PED FATALITIES */
DATA PED_VEH;
  MERGE VEH
        PED1 (IN=A);
  BY ST_CASE VEH_NO;
  IF A;
  YEAR=&Y;  /* DATA YEAR */
RUN;

PROC APPEND BASE=PEDS_2009 DATA=PED_VEH FORCE;  RUN;

%END;  /* END 2009 */

/*********************************************************************/

/**************************/
/* DATA YEARS 2010 - 2014 */
/**************************/

%ELSE %IF &Y>2009 AND &Y < 2015 %THEN %DO;

/* CREATE DATASETS FOR 1) PEDESTRIAN AND PEDALCYCLIST FATALITIES AND 2) DRIVERS INVOLVED AND ATTACH
   THEIR IMPUTED ALCOHOL DATA
   RENAME P1-P10 TO D1-D10 IN THE DRIVER (DRV) FILE TO DIFFERENTIATE FROM THE IMPUTED ALCOHOL
   VARIABLES (P1-P10) FOR THE PEDESTRIANS AND PEDALCYCLISTS IN THE PED FILE */
DATA PED (KEEP=ST_CASE PER_TYP AGE SEX DRINKING ALC_RES HOSPITAL DOA DEATH_MO DEATH_YR LAG_HRS LAG_MINS
               RACE HISPANIC LOCATION INJ_SEV P1-P10 &STRVEH_VAR &REN_STRVEH)
     DRV (RENAME=(DRINKING=DRV_DRINKING ALC_RES=DRV_ALC_RES AGE=DRV_AGE SEX=DRV_SEX
                  P1=D1 P2=D2 P3=D3 P4=D4 P5=D5 P6=D6 P7=D7 P8=D8 P9=D9 P10=D10));
  MERGE FARS&Y..PERSON 
        FARS&Y..MIPER;  /* IMPUTED ALCOHOL DATASET */
  BY ST_CASE VEH_NO PER_NO;
  IF (PER_TYP IN (1,2,3,9,5,6,7) AND INJ_SEV=4) OR PER_TYP=1;

  IF (PER_TYP IN (1,2,3,9,5,6,7) AND INJ_SEV=4) THEN OUTPUT PED;  /* OUTPUT TO PED FILE */
  ELSE IF PER_TYP=0 THEN OUTPUT DRV;  /* OUTPUT TO DRIVER FILE */
RUN;

/* GET VEHICLES, ALONG WITH ANY ASSOCIATED DRIVER DATA */
DATA VEH;
  MERGE FARS&Y..VEHICLE (KEEP=ST_CASE VEH_NO MAKE MODEL MOD_YEAR BODY_TYP SPEEDREL TRAV_SP
	                          HIT_RUN REG_STAT OWNER GVWR M_HARM IMPACT1 DEATHS DR_ZIP PREV_ACC
	                          PREV_SUS PREV_DWI PREV_SPD PREV_OTH FIRST_YR LAST_YR ACC_TYPE VSPD_LIM IN=A)
        DRV;
  BY ST_CASE VEH_NO;
  IF A;
RUN;

/* ATTACH ACCIDENT DATA TO PED DATA */
DATA ACC_PED;
  MERGE FARS&Y..ACCIDENT (KEEP=ST_CASE STATE CITY COUNTY VE_FORMS HARM_EV ROAD_FNC
                               LGT_COND WEATHER LATITUDE LONGITUD)
        PED (IN=A);
  BY ST_CASE;
  IF A;
RUN;

/* RENAME THE PED'S STRIKING VEHICLE NUMBER (N_MOT_NO OR STR_VEH) TO VEH_NO */
DATA PED1;
  SET ACC_PED;
  /* RENAME THE PED'S STRIKING VEHICLE NUMBER (N_MOT_NO OR STR_VEH) TO VEH_NO 
     SO THAT IT CAN BE MERGED WITH THEIR STRIKING VEHICLE */
  RENAME STR_VEH=VEH_NO;
RUN;
  
PROC SORT DATA=PED1; BY ST_CASE VEH_NO;  RUN;

/* ATTACH VEHICLE/DRIVER DATA TO PED FATALITIES */
DATA PED_VEH;
  MERGE VEH
        PED1 (IN=A);
  BY ST_CASE VEH_NO;
  IF A;
  YEAR=&Y;  /* DATA YEAR */
RUN;

/* DRIVER VIOLATIONS CHARGED WENT TO PICK ALL THAT APPLIES IN 2010 */
/* GET ALL VIOLATIONS CHARGED FOR STRIKING VEHICLE DRIVERS */
DATA VIOL;
  MERGE PED_VEH (KEEP=ST_CASE VEH_NO IN=A)
        FARS&Y..VIOLATN;
  BY ST_CASE VEH_NO;
  IF A;
RUN;

/* TRANSPOSE THE VIOL DATASET SO THAT THERE IS A SEPARATE VIOLATION DATA ELEMENT FOR EACH VIOLATION */ 
PROC TRANSPOSE DATA=VIOL OUT=TRANS_VIOL (DROP=_NAME_ _LABEL_) PREFIX=VIOLCHG;
  BY ST_CASE VEH_NO;
  VAR MVIOLATN;
RUN;

/* A SURVEY OF THE DATA FROM 2010 TO 2017 SHOWED THAT THE MAXIMUM
   NUMBER OF VIOLATIONS CODED FOR A VEHICLE/DRIVER WHO STRUCK A PED
   WAS 9. SO CREATE 9 VARIABLES FOR VIOLATIONS - VIOLCHG1-VIOLCHG9 */
DATA VIOL_RETAIN;
  RETAIN ST_CASE VEH_NO VIOLCHG1-VIOLCHG9 .;
  SET TRANS_VIOL;
RUN;

/* FINISHED WITH VIOLATIONS CHARGED */

/* ATTACH VIOLATIONS CHARGED DATA ELEMENTS TO THE PED_VEH DATASET */
DATA PED_VEH1;
  MERGE PED_VEH (IN=A)
        VIOL_RETAIN;
  BY ST_CASE;
  IF A;
RUN;

PROC APPEND BASE=PEDS_2010_2014 DATA=PED_VEH1 FORCE;  RUN;

%END;  /* END 2010 - 2014 */

/*********************************************************************/

/**************************/
/* DATA YEARS 2015 - 2017 */
/**************************/

%ELSE %IF &Y>2014 AND &Y<2018 %THEN %DO;

/* CREATE DATASETS FOR 1) PEDESTRIAN AND PEDALCYCLIST FATALITIES AND 2) DRIVERS INVOLVED AND ATTACH
   THEIR IMPUTED ALCOHOL DATA
   RENAME P1-P10 TO D1-D10 IN THE DRIVER (DRV) FILE TO DIFFERENTIATE FROM THE IMPUTED ALCOHOL
   VARIABLES (P1-P10) FOR THE PEDESTRIANS AND PEDALCYCLISTS IN THE PED FILE */
DATA PED (KEEP=ST_CASE PER_TYP AGE SEX DRINKING ALC_RES HOSPITAL DOA DEATH_MO DEATH_YR LAG_HRS LAG_MINS
               RACE HISPANIC LOCATION INJ_SEV P1-P10 STR_VEH)
     DRV (RENAME=(DRINKING=DRV_DRINKING ALC_RES=DRV_ALC_RES AGE=DRV_AGE SEX=DRV_SEX
                  P1=D1 P2=D2 P3=D3 P4=D4 P5=D5 P6=D6 P7=D7 P8=D8 P9=D9 P10=D10));
  MERGE FARS&Y..PERSON 
        FARS&Y..MIPER;  /* IMPUTED ALCOHOL DATASET */
  BY ST_CASE VEH_NO PER_NO;
  IF (PER_TYP IN (1,2,3,9,5,6,7) AND INJ_SEV=4) OR PER_TYP=1;

  /* IN 2015, ALCOHOL TEST RESULTS (ALC_RES) ATTRIBUTES WENT FROM 2-DIGITS TO 3-DIGITS */
  /* MAP THE 2015 AND LATER YEAR ATTRIBUTES TO THE 2014 AND EARLIER YEAR 2-DIGIT SCHEMA */ 
  IF &Y>=2015 THEN DO;

    IF ALC_RES IN (0:9) THEN NEW_RES=0;
    ELSE IF ALC_RES IN (10:19) THEN NEW_RES=1;
    ELSE IF ALC_RES IN (20:29) THEN NEW_RES=2;
    ELSE IF ALC_RES IN (30:39) THEN NEW_RES=3;
    ELSE IF ALC_RES IN (40:49) THEN NEW_RES=4;
    ELSE IF ALC_RES IN (50:59) THEN NEW_RES=5;
    ELSE IF ALC_RES IN (60:69) THEN NEW_RES=6;
    ELSE IF ALC_RES IN (70:79) THEN NEW_RES=7;
    ELSE IF ALC_RES IN (80:89) THEN NEW_RES=8;
    ELSE IF ALC_RES IN (90:99) THEN NEW_RES=9;

    ELSE IF ALC_RES IN (100:109) THEN NEW_RES=10;
    ELSE IF ALC_RES IN (110:119) THEN NEW_RES=11;
    ELSE IF ALC_RES IN (120:129) THEN NEW_RES=12;
    ELSE IF ALC_RES IN (130:139) THEN NEW_RES=13;
    ELSE IF ALC_RES IN (140:149) THEN NEW_RES=14;
    ELSE IF ALC_RES IN (150:159) THEN NEW_RES=15;
    ELSE IF ALC_RES IN (160:169) THEN NEW_RES=16;
    ELSE IF ALC_RES IN (170:179) THEN NEW_RES=17;
    ELSE IF ALC_RES IN (180:189) THEN NEW_RES=18;
    ELSE IF ALC_RES IN (190:199) THEN NEW_RES=19;

    ELSE IF ALC_RES IN (200:209) THEN NEW_RES=20;
    ELSE IF ALC_RES IN (210:219) THEN NEW_RES=21;
    ELSE IF ALC_RES IN (220:229) THEN NEW_RES=22;
    ELSE IF ALC_RES IN (230:239) THEN NEW_RES=23;
    ELSE IF ALC_RES IN (240:249) THEN NEW_RES=24;
    ELSE IF ALC_RES IN (250:259) THEN NEW_RES=25;
    ELSE IF ALC_RES IN (260:269) THEN NEW_RES=26;
    ELSE IF ALC_RES IN (270:279) THEN NEW_RES=27;
    ELSE IF ALC_RES IN (280:289) THEN NEW_RES=28;
    ELSE IF ALC_RES IN (290:299) THEN NEW_RES=29;

    ELSE IF ALC_RES IN (300:309) THEN NEW_RES=30;
    ELSE IF ALC_RES IN (310:319) THEN NEW_RES=31;
    ELSE IF ALC_RES IN (320:329) THEN NEW_RES=32;
    ELSE IF ALC_RES IN (330:339) THEN NEW_RES=33;
    ELSE IF ALC_RES IN (340:349) THEN NEW_RES=34;
    ELSE IF ALC_RES IN (350:359) THEN NEW_RES=35;
    ELSE IF ALC_RES IN (360:369) THEN NEW_RES=36;
    ELSE IF ALC_RES IN (370:379) THEN NEW_RES=37;
    ELSE IF ALC_RES IN (380:389) THEN NEW_RES=38;
    ELSE IF ALC_RES IN (390:399) THEN NEW_RES=39;

    ELSE IF ALC_RES IN (400:409) THEN NEW_RES=40;
    ELSE IF ALC_RES IN (410:419) THEN NEW_RES=41;
    ELSE IF ALC_RES IN (420:429) THEN NEW_RES=42;
    ELSE IF ALC_RES IN (430:439) THEN NEW_RES=43;
    ELSE IF ALC_RES IN (440:449) THEN NEW_RES=44;
    ELSE IF ALC_RES IN (450:459) THEN NEW_RES=45;
    ELSE IF ALC_RES IN (460:469) THEN NEW_RES=46;
    ELSE IF ALC_RES IN (470:479) THEN NEW_RES=47;
    ELSE IF ALC_RES IN (480:489) THEN NEW_RES=48;
    ELSE IF ALC_RES IN (490:499) THEN NEW_RES=49;

    ELSE IF ALC_RES IN (500:509) THEN NEW_RES=50;
    ELSE IF ALC_RES IN (510:519) THEN NEW_RES=51;
    ELSE IF ALC_RES IN (520:529) THEN NEW_RES=52;
    ELSE IF ALC_RES IN (530:559) THEN NEW_RES=53;
    ELSE IF ALC_RES IN (540:549) THEN NEW_RES=54;
    ELSE IF ALC_RES IN (550:559) THEN NEW_RES=55;
    ELSE IF ALC_RES IN (560:569) THEN NEW_RES=56;
    ELSE IF ALC_RES IN (570:579) THEN NEW_RES=57;
    ELSE IF ALC_RES IN (580:589) THEN NEW_RES=58;
    ELSE IF ALC_RES IN (590:599) THEN NEW_RES=59;

    ELSE IF ALC_RES IN (600:609) THEN NEW_RES=60;
    ELSE IF ALC_RES IN (610:619) THEN NEW_RES=61;
    ELSE IF ALC_RES IN (620:629) THEN NEW_RES=62;
    ELSE IF ALC_RES IN (630:639) THEN NEW_RES=63;
    ELSE IF ALC_RES IN (640:649) THEN NEW_RES=64;
    ELSE IF ALC_RES IN (650:659) THEN NEW_RES=65;
    ELSE IF ALC_RES IN (660:669) THEN NEW_RES=66;
    ELSE IF ALC_RES IN (670:679) THEN NEW_RES=67;
    ELSE IF ALC_RES IN (680:689) THEN NEW_RES=68;
    ELSE IF ALC_RES IN (690:699) THEN NEW_RES=69;

    ELSE IF ALC_RES IN (700:709) THEN NEW_RES=70;
    ELSE IF ALC_RES IN (710:719) THEN NEW_RES=71;
    ELSE IF ALC_RES IN (720:729) THEN NEW_RES=72;
    ELSE IF ALC_RES IN (730:739) THEN NEW_RES=73;
    ELSE IF ALC_RES IN (740:749) THEN NEW_RES=74;
    ELSE IF ALC_RES IN (750:759) THEN NEW_RES=75;
    ELSE IF ALC_RES IN (760:769) THEN NEW_RES=76;
    ELSE IF ALC_RES IN (770:779) THEN NEW_RES=77;
    ELSE IF ALC_RES IN (780:789) THEN NEW_RES=78;
    ELSE IF ALC_RES IN (790:799) THEN NEW_RES=79;

    ELSE IF ALC_RES IN (800:809) THEN NEW_RES=80;
    ELSE IF ALC_RES IN (810:819) THEN NEW_RES=81;
    ELSE IF ALC_RES IN (820:829) THEN NEW_RES=82;
    ELSE IF ALC_RES IN (830:839) THEN NEW_RES=83;
    ELSE IF ALC_RES IN (840:849) THEN NEW_RES=84;
    ELSE IF ALC_RES IN (850:859) THEN NEW_RES=85;
    ELSE IF ALC_RES IN (860:869) THEN NEW_RES=86;
    ELSE IF ALC_RES IN (870:879) THEN NEW_RES=87;
    ELSE IF ALC_RES IN (880:889) THEN NEW_RES=88;
    ELSE IF ALC_RES IN (890:899) THEN NEW_RES=89;

    ELSE IF ALC_RES IN (900:909) THEN NEW_RES=90;
    ELSE IF ALC_RES IN (910:919) THEN NEW_RES=91;
    ELSE IF ALC_RES IN (920:929) THEN NEW_RES=92;
    ELSE IF ALC_RES IN (930:939) THEN NEW_RES=93;

    ELSE IF ALC_RES=940 THEN NEW_RES=94;  /* .94 AND ABOVE */

    ELSE IF ALC_RES=995 THEN NEW_RES=95;  /* NOT REPORTED */
    ELSE IF ALC_RES=996 THEN NEW_RES=96;  /* TEST NOT GIVEN */
    ELSE IF ALC_RES=997 THEN NEW_RES=97;  /* AC TEST PERFORMED, RESULTS UNKNOWN */
    ELSE IF ALC_RES=998 THEN NEW_RES=98;  /* POSITIVE READING WITH NO ACTUAL VALUE */
    ELSE IF ALC_RES=999 THEN NEW_RES=99;  /* UNKNOWN IF TESTED */

    ALC_RES=NEW_RES;  /* REASSIGN ALC_RES WITH THE NEW VALUE */
  END;  /* END ALC_RES REALIGNMENT */

  IF PER_TYP IN (1,2,3,9,5,6,7) AND INJ_SEV=4 THEN OUTPUT PED;  /* OUTPUT TO PED FILE */
  ELSE IF PER_TYP=0 THEN OUTPUT DRV;  /* OUTPUT TO DRIVER FILE */
RUN;

/* GET VEHICLES, ALONG WITH ANY ASSOCIATED DRIVER DATA */
DATA VEH;
  MERGE FARS&Y..VEHICLE (KEEP=ST_CASE VEH_NO MAKE MODEL MOD_YEAR BODY_TYP SPEEDREL TRAV_SP
	                          HIT_RUN REG_STAT OWNER GVWR M_HARM IMPACT1 DEATHS DR_ZIP PREV_ACC
	                          PREV_SUS PREV_DWI PREV_SPD PREV_OTH FIRST_YR LAST_YR ACC_TYPE VSPD_LIM IN=A)
        DRV;
  BY ST_CASE VEH_NO;
  IF A;
RUN;

/* ATTACH ACCIDENT DATA TO PED DATA */
DATA ACC_PED;
  MERGE FARS&Y..ACCIDENT (KEEP=ST_CASE STATE CITY COUNTY VE_FORMS HARM_EV FUNC_SYS RUR_URB
                               LGT_COND WEATHER LATITUDE LONGITUD)
        PED (IN=A);
  BY ST_CASE;
  IF A;
RUN;

/* RENAME THE PED'S STRIKING VEHICLE NUMBER (N_MOT_NO OR STR_VEH) TO VEH_NO */
DATA PED1;
  SET ACC_PED;
  /* RENAME THE PED'S STRIKING VEHICLE NUMBER (N_MOT_NO OR STR_VEH) TO VEH_NO 
     SO THAT IT CAN BE MERGED WITH THEIR STRIKING VEHICLE */
  RENAME STR_VEH=VEH_NO;
RUN;
  
PROC SORT DATA=PED1; BY ST_CASE VEH_NO;  RUN;

/* ATTACH VEHICLE/DRIVER DATA TO PED FATALITIES */
DATA PED_VEH;
  MERGE VEH
        PED1 (IN=A);
  BY ST_CASE VEH_NO;
  IF A;
  YEAR=&Y;  /* DATA YEAR */
RUN;

/* DRIVER VIOLATIONS CHARGED WENT TO PICK ALL THAT APPLIES IN 2010 */
/* GET ALL VIOLATIONS CHARGED FOR STRIKING VEHICLE DRIVERS */
DATA VIOL;
  MERGE PED_VEH (KEEP=ST_CASE VEH_NO IN=A)
        FARS&Y..VIOLATN;
  BY ST_CASE VEH_NO;
  IF A;
RUN;

/* TRANSPOSE THE VIOL DATASET SO THAT THERE IS A SEPARATE VIOLATION DATA ELEMENT FOR EACH VIOLATION */ 
PROC TRANSPOSE DATA=VIOL OUT=TRANS_VIOL (DROP=_NAME_ _LABEL_) PREFIX=VIOLCHG;
  BY ST_CASE VEH_NO;
  VAR MVIOLATN;
RUN;

/* A SURVEY OF THE DATA FROM 2010 TO 2017 SHOWED THAT THE MAXIMUM
   NUMBER OF VIOLATIONS CODED FOR A VEHICLE/DRIVER WHO STRUCK A PED
   WAS 9. SO CREATE 9 VARIABLES FOR VIOLATIONS - VIOLCHG1-VIOLCHG9 */
DATA VIOL_RETAIN;
  RETAIN ST_CASE VEH_NO VIOLCHG1-VIOLCHG9 .;
  SET TRANS_VIOL;
RUN;

/* FINISHED WITH VIOLATIONS CHARGED */

/* ATTACH VIOLATIONS CHARGED DATA ELEMENTS TO THE PED_VEH DATASET */
DATA PED_VEH1;
  MERGE PED_VEH (IN=A)
        VIOL_RETAIN;
  BY ST_CASE;
  IF A;
RUN;

PROC APPEND BASE=PEDS_2015_2017 DATA=PED_VEH1 FORCE;  RUN;

%END;  /* END 2015 - 2017 */

/***********************************************************************/

%END;  /* END MACRO LOOP */
%MEND REPEAT;  /* END MACRO */

%REPEAT;  /* CALL MACRO - PROCESS CODE WITHIN THE MACRO */ 

/* PEDESTRIAN AND PEDALCYCLIST FATALITY DATASET FOR ALL YEARS (2001-2017) */
DATA PED_FATS1;
  SET PEDS_2015_2017
      PEDS_2010_2014
      PEDS_2009
      PEDS_2001_2008;
RUN;

/* GET COUNTY AND CITY NAMES */

/* LOCATION OF CITY AND COUNTY NAMES DATASET */
LIBNAME CITYCNTY 'C:\Users\Briana.Thrift.ctr\Documents\Rural_NonOccupant\SAS Programs\Old SAS Programs';  /* LOCATION OF CITY NAME (CITY) ANC COUNTY NAME (COUNTY) SAS DATASETS ON TONJA'S LOCAL NETWORK */

/* GET COUNTY NAMES */

PROC SORT DATA=PED_FATS1;  BY STATE COUNTY;  RUN;

DATA PED_FATS_COUNTY;
  MERGE PED_FATS1 (IN=A)
        CITYCNTY.county (IN=B);
  BY STATE;
  IF A;
  IF NOT B THEN CNTYNAME='ZZ NO DECODE FOR THIS COUNTY';
RUN;

/* GET CITYNAMES */

PROC SORT DATA=PED_FATS1;  BY STATE CITY;  RUN;

DATA PED_FATS_CITY_COUNTY;
  MERGE PED_FATS_COUNTY (IN=A)
        CITYCNTY.county (IN=B);
  BY STATE CITY;
  IF A;
  IF NOT B THEN CITYNAME='ZZ NO DECODE FOR THIS CITY';
RUN;

/******************************************************************/
*COULD NOT FIGURE OUT HOW TO GET COUNTY AND CITY NAMES;

/* CREATE DERIVED DATA ELEMENTS WHERE NEEDED TO SMOOTH OUT DATA THROUGH THE YEARS */
DATA OUT.PED_FATS;
  SET PED_FATS1;

  /* ACCOUNT FOR CHANGE IN AGE ATTRIBUTES IN 2009/2010 */
  IF YEAR>2008 THEN DO;
     /* PEDESTRIAN/PEDALCYCLIST AGE */
     IF 97<=AGE<=120 THEN AGE=97;
     ELSE IF AGE IN (998,999) THEN AGE=99;
     /* STRIKING DRIVER'S AGE */
     IF 97<=DRV_AGE<=120 THEN DRV_AGE=97;
     ELSE IF DRV_AGE IN (998,999) THEN DRV_AGE=99;
  END;

  /*********************************************************************/

  /* SEX - ASSIGN NOT REPORTED TO UNKNOWN FOR PED AND DRIVER SEX */
  IF SEX=8 THEN SEX=9;  /* NOT REPORTED (8) WAS INTRODUCED IN 2010 */
  IF DRV_SEX=8 THEN DRV_SEX=9;  /* NOT REPORTED (8) WAS INTRODUCED IN 2010 */

  /*********************************************************************/

  /* HISPANIC ORIGIN AND RACE CLASSIFICATIONS - ONLY CODED FOR FATALITIES */
  /* USE THE OMB CLASSIFICATIONS (HRACE) */

  IF HISPANIC=7 THEN HISP=1;  /* NON-HISPANIC */
  ELSE IF HISPANIC IN (1:6) THEN HISP=2;  /* HISPANIC */
  /* 0 IS TO COVER FOR ERRONEOUS CODES IN 1999 AND 9 IN 2002 */
  ELSE IF HISPANIC IN (0,9,99) THEN HISP=3; 

  IF RACE IN (0,9) THEN RACE=99; /* CORRECTING ERRONEOUS CODES ON FILE */

  /* RACE CATEGORIES */
  IF RACE=1 THEN RCAT=1;        /* WHITE */
  ELSE IF RACE=2 THEN RCAT=2;   /* BLACK */
  ELSE IF RACE=3 THEN RCAT=3;   /* AMERICAN INDIAN */
  ELSE IF RACE IN (4,5,7,18,28,48) THEN RCAT=4;   /* ASIAN */
  ELSE IF RACE IN (6,38,58) THEN RCAT=5;   /* PACIFIC ISLANDER */
  ELSE IF RACE=97 THEN RCAT=6;   /* MIXED RACE */ 
  ELSE IF RACE IN (19,68,78,98) THEN RCAT=7;   /* ALL OTHER RACES */ 
  ELSE IF RACE=99 THEN RCAT=8;   /* UNKNOWN */

  /* HISPANIC AND RACE */
  IF HISP=2 THEN HRACE=1;  /* Hispanic */
  ELSE IF HISP=1 AND RCAT=1 THEN HRACE=2;  /* White, Non-Hispanic */
  ELSE IF HISP=1 AND RCAT=2 THEN HRACE=3;  /* Black, Non-Hispanic */
  ELSE IF RCAT=3 THEN HRACE=4;  /* American Indian, Non-Hispanic/Unknown */
  ELSE IF RCAT=4 THEN HRACE=5; /* Asian, Non-Hispanic/Unknown */
  ELSE IF RCAT=5 THEN HRACE=6; /* Pacific Islander, Non-Hispanic/Unknown */
  ELSE IF RCAT=6 THEN HRACE=7;  /* Multiple Races, Non-Hispanic/Unknown */
  ELSE IF HISP=1 OR 1<=RCAT<=7 THEN HRACE=8;  /* All Other Non-hispanic or Race */
  ELSE HRACE=9;  /* Unknown */

  /*********************************************************************/

  /* NONMOTORIST LOCATION */
  /* 2010 AND LATER CODING DIFFERS FROM 2009 AND EARLIER CODING */

  /*********************************************************************/

  /* LAND USE */
  IF YEAR IN (2001:2014) THEN DO;
    IF ROAD_FNC IN (1,2,3,4,5,6,9) THEN LANDUSE=1;  /* RURAL */
    ELSE IF ROAD_FNC IN (11,12,13,14,15,16,19) THEN LANDUSE=2;  /* URBAN */
    ELSE IF ROAD_FNC=99 THEN LANDUSE=3;  /* UNKNOWN */
  END;
  ELSE IF YEAR>2014 THEN DO;
    IF RUR_URB=1 THEN LANDUSE=1;  /* RURAL */
    ELSE IF RUR_URB=2 THEN LANDUSE=2;  /* URBAN */
    ELSE IF RUR_URB IN (6,8,9) THEN LANDUSE=3;  /* UNKNOWN */
  END;

  /*********************************************************************/

  /* STRIKING VEHICLE TYPES - APPLIES TO 1991 AND LATER CODES */
  IF BODY_TYP IN (1:11,17) THEN BODY=1;  /* PASSENGER CARS */
  /* LIGHT TRUCKS AND VANS */
  ELSE IF BODY_TYP IN (14,15,16,19,20,21,22,24,25,28,29,30,31,32,33,34,
    39,40,41,45,48,49) OR (BODY_TYP=79 AND TOW_VEH IN (0,9)) THEN DO;
    IF 30<=BODY_TYP<=39 THEN BODY=2;  /* PICKUP, 34 NEW IN 2017 */
    ELSE IF 14<=BODY_TYP<=19 THEN BODY=3;  /* SUV */
    ELSE IF BODY_TYP IN (20,21,22,24,25,28,29) THEN BODY=4;  /* VAN */
    ELSE BODY=5;  /* OTHER/UNKNOWN LIGHT TRUCK */
  END;
  ELSE IF BODY_TYP IN (60,61,62,63,64,66,67,71,72,78) OR
    (BODY_TYP=79 AND (1<=TOW_VEH<=4)) THEN BODY=6;  /* LARGE TRUCKS */
  ELSE IF BODY_TYP IN (80:89) THEN BODY=7;  /* MOTORCYCLES, 84-87 NEW IN  2017 */
  ELSE IF BODY_TYP IN (50,51,52,55,58,59) THEN BODY=8;  /* BUSES, 55 NEW IN 2011 */
  /* OTHER UNKNOWN VEHICLES */
  ELSE IF BODY_TYP IN (12,13,23,42,65,73,90,91,92,93,94,95,96,97,98,99) THEN BODY=9; /* 98 NEW IN 2010; 95 IN 2012; 96 NEW IN 2017 */
  ELSE IF BODY_TYP=. THEN BODY=10;  /* MISSING, NO MATCHING STRIKING VEHICLE */

  /*********************************************************************/

  /* POSTED SPEED LIMIT */
  /* PRIOR TO 2010, POSTED SPEED LIMIT WAS CODED ON THE ACCIDENT LEVEL
     SINCE 2010, POSTED SPEED LIMIT IS CODED ON THE VEHICLE LEVEL */
  IF YEAR IN (2001:2009) THEN DO;
    IF SP_LIMIT=0 THEN SPD_LIM=0;  /* NO STATUTORY LIMIT */
    ELSE IF SP_LIMIT IN (1:98) THEN SPD_LIM=SP_LIMIT;  /* ACTUAL SPEED LIMIT */
    ELSE IF SP_LIMIT=99 THEN SPD_LIM=99;  /* UNKNOWN */
  END;
  ELSE IF YEAR>=2010 THEN DO;
    IF VSPD_LIM=0 THEN SPD_LIM=0;  /* NO STATUTORY LIMIT */
    ELSE IF VSPD_LIM IN (1:97) THEN SPD_LIM=VSPD_LIM;  /* ACTUAL SPEED LIMIT */
    ELSE IF VSPD_LIM IN (98,99) THEN SPD_LIM=99;  /* UNKNOWN */
  END;

  /* SPEEDING DRIVERS */
  IF YEAR IN (2001:2007) THEN DO;
    IF DR_CF1 IN (44,46) OR DR_CF2 IN (44,46) OR DR_CF3 IN (44,46) OR
       DR_CF4 IN (44,46) THEN SPEED_DRV=1;  /* SPEEDING DRIVER */
    ELSE SPEED_DRV=0;  /* ALL OTHER DRIVERS */
  END;
  ELSE IF YEAR=2008 THEN DO;
    IF DR_CF1 IN (43,44,46) OR DR_CF2 IN (43,44,46) OR DR_CF3 IN (43,44,46) OR
       DR_CF4 IN (43,44,46) THEN SPEED_DRV=1;  /* SPEEDING DRIVER */
    ELSE SPEED_DRV=0;  /* ALL OTHER DRIVERS */
  END;
  ELSE IF YEAR IN (2009:2012) THEN DO;
    IF SPEEDREL=1 THEN SPEED_DRV=1;  /* SPEEDING DRIVER */
    ELSE SPEED_DRV=0;  /* ALL OTHER DRIVERS - INCLUDES UNKNOWNS */
  END;
  ELSE IF YEAR>2012 THEN DO;
    IF SPEEDREL IN (2,3,4,5) THEN SPEED_DRV=1;  /* SPEEDING DRIVER */
    ELSE SPEED_DRV=0;  /* ALL OTHER DRIVERS - INCLUDES UNKNOWNS */
  END;

  /*********************************************************************/
  
  /* HIT AND RUN VEHICLES */
  IF YEAR IN (2001:2008) THEN DO;
    IF HIT_RUN IN (1:5) THEN HITRUN_DRV=1;  /* HIT-AND-RUN DRIVER */
    ELSE HITRUN_DRV=0;  /* ALL OTHER DRIVERS */
  END;
  ELSE IF YEAR>2008 THEN DO;
    IF HIT_RUN=1 THEN HITRUN_DRV=1;  /* HIT-AND-RUN DRIVER */
    ELSE HITRUN_DRV=0;  /* ALL OTHER DRIVERS - INCLUDES UNKNOWNS */
  END;

  /*********************************************************************/

  /* STRIKING VEHICLE DRIVER'S RESTRAINT USE */
  /* RESTRAINT USE - USE FOR ALL OCCUPANTS EXCEPT MOTORCYCLISTS */
  IF BODY IN (1:6,8,9) THEN DO;
    IF YEAR IN (2001:2009) THEN DO;
      IF REST_USE IN (1,2,3,4,8,10,11,12,13,14) THEN REST=1;  /* BELTED, EXCLUDES HELMETS; 10, 11, 12 ADDED IN 2008 */
      ELSE IF REST_USE IN (0,5,6,15) THEN REST=2;  /* NOT BELTED, INCLUDES HELMETS */
      ELSE IF REST_USE=99 THEN REST=3;  /* UNKNOWN */
    END;
    ELSE IF YEAR>2009 THEN DO;
      IF REST_USE IN (1,2,3,4,8,10,11,12,97) THEN REST=1;  /* BELTED, EXCLUDES HELMETS */
      ELSE IF REST_USE IN (0,5,7,16,17,19,20) THEN REST=2;  /* NOT BELTED, INCLUDES HELMETS, 20 ADDED IN 2017 */
      ELSE IF REST_USE IN (29,98,99) THEN REST=3;  /* UNKNOWN */
    END;
  END;
  /* HELMET USE FOR MOTORCYCLISTS */
  ELSE IF BODY=7 THEN DO;
    IF YEAR IN (2001:2009) THEN DO;
      IF REST_USE IN (5,8) THEN REST=1; /* HELMETED */
      ELSE IF REST_USE IN (0,1,2,3,4,6,10,11,12,13,14,15) THEN REST=2;  /* UNHELMETED INCLUDES IMPROPERLY HELMETED AND BELTS; 10, 11, 12 ADDED IN 2008 */
      ELSE IF REST_USE=99 THEN REST=3;  /* UNKNOWN */
    END;
    ELSE IF YEAR>2009 THEN DO;
      IF REST_USE IN (5,8,16,19,97) AND REST_MIS=0 THEN REST=1;  /* HELMETED AND NOT MISUSED; 19 ADDED IN 2013 */
      ELSE IF REST_USE IN (0,1,2,3,4,7,10,11,12,17,20) OR (REST_USE IN (5,8,16,19,97) AND REST_MIS=1) THEN REST=2;  /* UNHELMETED INCLUDES BELTS; 19 ADDED IN 2013, 20 ADDED IN 2017 */
      ELSE IF REST_USE IN (29,98,99) THEN REST=3;  /* UNKNOWN; 29 ADDED IN 2013 */
    END;
  END;

  /*********************************************************************/

  /* ALCOHOL TEST RESULTS */
  IF YEAR IN (2001:2014) THEN DO;
    /* PEDS */
    IF 0<ALC_RES<=94 OR (YEAR>=2004 AND ALC_RES=98) THEN PED_ALCRES=1;  /* TESTED WITH KNOWN RESULTS  */
    ELSE IF ALC_RES=97 THEN PED_ALCRES=2;  /* TESTED WITH UNKNOWN RESULTS */
    ELSE IF ALC_RES=96 OR (YEAR<=2009 AND ALC_RES=95) THEN PED_ALCRES=3;  /* NOT TESTED */
    ELSE IF ALC_RES=99 OR (YEAR>=2010 AND ALC_RES=95) THEN PED_ALCRES=4;  /* UNKNOWN IF TESTED */
    /* DRIVERS */
    IF 0<DRV_ALC_RES<=94 OR (YEAR>=2004 AND DRV_ALC_RES=98) THEN DRV_ALCRES=1;  /* TESTED WITH KNOWN RESULTS  */
    ELSE IF DRV_ALC_RES=97 THEN DRV_ALCRES=2;  /* TESTED WITH UNKNOWN RESULTS */
    ELSE IF DRV_ALC_RES=96 OR (YEAR<=2009 AND DRV_ALC_RES=95) THEN DRV_ALCRES=3;  /* NOT TESTED */
    ELSE IF DRV_ALC_RES=99 OR (YEAR>=2010 AND DRV_ALC_RES=95) THEN DRV_ALCRES=4;  /* UNKNOWN IF TESTED */
  END;

  ELSE IF YEAR>=2015 THEN DO;
    /* PEDS */
    IF ALC_RES IN (0:940,998) THEN PED_ALCRES=1;  /* TESTED WITH KNOWN RESULTS  */
    ELSE IF ALC_RES=997 THEN PED_ALCRES=2;  /* TESTED WITH UNKNOWN RESULTS */
    ELSE IF ALC_RES=996 THEN PED_ALCRES=3;  /* NOT TESTED */
    ELSE IF ALC_RES IN (995,999) THEN PED_ALCRES=4;  /* UNKNOWN IF TESTED */
    /* DRIVERS */
    IF DRV_ALC_RES IN (0:940,998) THEN DRV_ALCRES=1;  /* TESTED WITH KNOWN RESULTS  */
    ELSE IF DRV_ALC_RES=997 THEN DRV_ALCRES=2;  /* TESTED WITH UNKNOWN RESULTS */
    ELSE IF DRV_ALC_RES=996 THEN DRV_ALCRES=3;  /* NOT TESTED */
    ELSE IF DRV_ALC_RES IN (995,999) THEN DRV_ALCRES=4;  /* UNKNOWN IF TESTED */
  END;
RUN;

/***********************************************************************/

OPTIONS NODATE PS=66 LS=165 NOCENTER;
ODS LISTING;

/* CHECK THAT THE PED_FATS DATASET CONTAINS ALL PEDESTRIAN AND PEDALCYCLIST FATALITIES */

PROC TABULATE DATA=OUT.PED_FATS FORMAT=COMMA10. MISSING;
  FORMAT PER_TYP PERFMT. BODY BODYFMT.;
  CLASS YEAR STATE PER_TYP BODY LOCATION;
  TABLE YEAR=' ', PER_TYP=' ' ALL / BOX='Crash Year' RTS=15;
  TABLE YEAR=' ', BODY='Striking Vehicle' ALL / BOX='Crash Year' RTS=15;
  TABLE YEAR=' ', LOCATION='Nonmotorist Location' ALL / BOX='Crash Year' RTS=15;
  TABLE STATE=' ' ALL, PER_TYP=' ' ALL / BOX='Crash Year' RTS=15;
  KEYLABEL N=' ' ALL='Total';
  TITLE 'PEDESTRIAN AND PEDALCYCLIST FATALITIES, 2001-2017';
RUN;

proc freq data=OUT.PED_FATS;
tables city;
run;
Proc Contents Data=OUT.PED_FATS;
Run;

*Sub-set the dataset to Years 2001-2017. 
	

Remember population and population density is available for 2010-2017;

Data Traffic_Fats;
	set OUT.PED_FATS;

*Clean Data;
	If TRAV_SP in (997 998 999) then TRAV_SP=.;
	If ALC_RES = 99 then ALC_RES=.;
	If SPD_LIM = 99 then SPD_LIM=.;
	If WEATHER = 9 then WEATHER=.;

*Create Function System Classification Variable;
	If ROAD_FNC=. then Func_System=.;
	else if ROAD_FNC= " " then Func_System=.;
	else If ROAD_FNC = 1 then Func_System=1;
	else if ROAD_FNC = 2 then Func_System=2;
	else if ROAD_FNC = 3 then Func_System=3;
	else if ROAD_FNC = 4 then Func_System=4;
	else if ROAD_FNC = 5 then Func_System=5;
	else if ROAD_FNC = 6 then Func_System=6;
	else if ROAD_FNC = 9 then Func_System=7;

	else if ROAD_FNC = 11 then Func_System=1;
	else if ROAD_FNC = 12 then Func_System=8;
	else if ROAD_FNC = 13 then Func_System=2;
	else if ROAD_FNC = 14 then Func_System=3;
	else if ROAD_FNC = 15 then Func_System=9;
	else if ROAD_FNC = 16 then Func_System=6;
	else if ROAD_FNC = 19 then Func_System=7;
	else if ROAD_FNC = 99 then Func_System=7;

* Create Census Urban/Rural Categories;
	If ROAD_FNC = . then Census_UR=.;
	else if ROAD_FNC = " " then Census_UR=.;
	else If ROAD_FNC = 1 then Census_UR=1;
	else if ROAD_FNC = 2 then Census_UR=1;
	else if ROAD_FNC = 3 then Census_UR=1;
	else if ROAD_FNC = 4 then Census_UR=1;
	else if ROAD_FNC = 5 then Census_UR=1;
	else if ROAD_FNC = 6 then Census_UR=1;
	else if ROAD_FNC = 9 then Census_UR=1;

	else if ROAD_FNC = 11 then Census_UR=2;
	else if ROAD_FNC = 12 then Census_UR=2;
	else if ROAD_FNC = 13 then Census_UR=2;
	else if ROAD_FNC = 14 then Census_UR=2;
	else if ROAD_FNC = 15 then Census_UR=2;
	else if ROAD_FNC = 16 then Census_UR=2;
	else if ROAD_FNC = 19 then Census_UR=2;
	else if ROAD_FNC = 99 then Census_UR=2;

*Specify Occupant vs. Non-Occupant;
	if per_typ in (5 6 7) then Motorist=0;
	else if per_typ in (1 2 3 9) then Motorist=1;

*Specify Functional Class;
	if Func_System=7 then Func_System=.;
	else if Func_System in (4 5 9) then Func_System=10;
	else if Func_System in (2 8) then Func_System=11;
*Specify Vehicle Body;

	IF BODY_TYP IN (1:11,17) THEN BODY=1;  /* PASSENGER CARS */
  /* LIGHT TRUCKS AND VANS */
  ELSE IF BODY_TYP IN (14,15,16,19,20,21,22,24,25,28,29,30,31,32,33,34,
    39,40,41,45,48,49) OR (BODY_TYP=79 AND TOW_VEH IN (0,9)) THEN DO;

    IF 30<=BODY_TYP<=39 THEN BODY=2;  /* PICKUP, 34 NEW IN 2017 */
    ELSE IF 14<=BODY_TYP<=19 THEN BODY=3;  /* SUV */

    ELSE IF BODY_TYP IN (20,21,22,24,25,28,29) THEN BODY=4;  /* VAN */
    ELSE BODY=5;  /* OTHER/UNKNOWN LIGHT TRUCK */
  END;
  ELSE IF BODY_TYP IN (60,61,62,63,64,66,67,71,72,78) OR
    (BODY_TYP=79 AND (1<=TOW_VEH<=4)) THEN BODY=6;  /* LARGE TRUCKS */
  ELSE IF BODY_TYP IN (80:89) THEN BODY=7;  /* MOTORCYCLES, 84-87 NEW IN  2017 */
  ELSE IF BODY_TYP IN (50,51,52,55,58,59) THEN BODY=8;  /* BUSES, 55 NEW IN 2011 */
  /* OTHER UNKNOWN VEHICLES */
  ELSE IF BODY_TYP IN (12,13,23,42,65,73,90,91,92,93,94,95,96,97,98,99) THEN BODY=9; /* 98 NEW IN 2010; 95 IN 2012; 96 NEW IN 2017 */
  ELSE IF BODY_TYP=. THEN BODY=.;  /* MISSING, NO MATCHING STRIKING VEHICLE*/

  If Body in (2 3 4 5) then body=11;
  else if body=6 then body=12;
  else if body in (7 8) then body=.; /*originally 7= Motorcycle and 8=Bus, but delete for analysis purposes*/
  else if body=9 then body=.;
*Cleaning Sex;
  if sex in (8 9) then Sex=.;

  if Trav_SP=99 then Trav_SP=.;

*Label Speeding Limit;
	label SPD_LIM="Recorded Speed Limit";

	If RCAT = . then POC=.;
	else if RCAT = 8 then POC=.;
	else If RCAT = 1 then POC=0; *White race;
	else POC=1; *People of color;

	If LGT_COND=1 then LIGHT=1;
	ELSE IF LGT_COND=2 THEN LIGHT=2;
	ELSE IF LGT_COND=3 THEN LIGHT=3;
	ELSE LIGHT =.;

*/Creating outcome variable for study, measuring risk for POC non-motorist, compared to white non-motorist/*;
	IF POC=0 AND MOTORIST=0 THEN OUTCOME=1; */WHITE NON-MOTORIST/*;
	ELSE IF POC=1 AND MOTORIST=0 THEN OUTCOME=2; */POC NON-MOTORIST/*;
	ELSE OUTCOME=.;

	IF POC=0 AND MOTORIST=1 THEN DEPENDENT=1; */WHITE MOTORIST/*;
	ELSE IF POC=1 AND MOTORIST=1 THEN DEPENDENT=2; */POC MOTORIST/*;
	ELSE DEPENDENT=.;

	IF HRACE IN (2 9) THEN MINORITY=.;  /* White, Non-Hispanic */
	ELSE IF HRACE IN (1) THEN MINORITY=0; /* Hispanic*/
	ELSE IF HRACE IN (3) THEN MINORITY=1; /* Black, Non-Hispanic */
 	ELSE IF HRACE IN (4) THEN MINORITY=2; /* American Indian, Non-Hispanic/Unknown */
	ELSE IF HRACE IN (5 6) THEN MINORITY=3; /* Asian/Pacific Islander, Non-Hispanic/Unknown */
	ELSE IF HRACE IN (7 8 9)THEN MINORITY=4; /*Other*/

Run;

DATA Traffic_Fats_1;
	SET Traffic_Fats;

	IF OUTCOME=. THEN DELETE;
RUN;

Proc format;

Value POC_fmt
	0 = "White"
	1 = "POC";

Value Func_fmt
	. = 'Missing'
	1 = 'Principal Arterial: Interstate'
	2 = 'Other Principal Arterials'
	3 = 'Minor Arterial'
	4 = 'Major Collector'
	5 = 'Minor Collector'
	6 = 'Local Road or Street'
	7 = 'Unknown'
	8 = 'Principal Arterial-Other Freeways or Expressways'
	9 = 'Non-specified Collector'
	10= 'Collector'
	11= 'Principal Arterial: Non-Interstate';

Value Census_UR_fmt
	. = 'Missing'
	1 = 'Rural'
	2 = 'Urban';

Value Motorist_fmt
	0 = 'Non-Motorist'
	1 = 'Motorist';

Value Bodyfmt
	1='Passanger Car'
	11= 'Light Truck'
	12='Large Truck'
	13= 'Motorcycle or Bus';

VALUE LIGHT_FMT
	1 = "Daylight"
	2 = "Dark, NO Lighting Available"
	3 = "Dark, Lighting Available";

VALUE OUTCOME_FMT
	1 = "White Non-Motorist"
	2 = "POC Non-Motorist";

VALUE DEPENDENT_FMT
	1 = "White Motorist"
	2 = "POC Motorist";

VALUE MINORITY_FMT
	0 = "Hispanic"
	1 = "Black, Non-Hispanic"
	2 = "American Indian, Non-Hispanic/Unknown"
	3 = "Asian/Pacific Islander, Non-Hispanic/Unknown"
	4 = "Other";

Run;
*
*
*
*
*
***** D E S C R I P T I V E 		S T A T I S T I C S *******
*
*
*
*
*Assess distribution of age;
Proc univariate data=Traffic_Fats;
var Age;
Histogram/Normal;
Run;

*Assess Means;
Proc means mean std median data=Traffic_Fats;
var AGE ALC_RES SPD_LIM TRAV_SP;
Run;

* Know that Alcohol Results need to be a percentage. So 98 = 0.098% BAC;
Proc Print data=Traffic_Fats;
var ALC_RES;
where ALC_RES=98;
Run;

Proc contents data=Traffic_Fats;
run;

*Look at frequencies of categorical variables
*Recognized that Census Rural/Urban are not available for years 2015-2017 ;

*Assessing Year of fatal crashes;
Title "Summary statistics for Occupant and Non-Occupant Fatalities in the US, 2001-2017";
Proc freq data=Traffic_Fats;
Tables Year;
Run;

Proc sort data=Traffic_Fats;
	by Motorist;
Run;

Title "Summary statistics for Occupant and Non-Occupant Fatalities in the US, 2001-2017";
Proc freq data=Traffic_Fats;
Tables Year;
By Motorist;
format Motorist Motorist_fmt.;
Run;

Proc sort data=Traffic_Fats;
	by POC;
Run;
Title "Summary statistics for Occupant and Non-Occupant Fatalities, by Race in the US, 2001-2017";
Proc freq data=Traffic_Fats;
Tables Year;
By POC;
where Motorist=0;
format POC POC_fmt. Motorist Motorist_fmt.;
Run;

*Assessing Person Type involved in fatal crash;
Proc freq data=Traffic_Fats;
	tables per_typ;
	format per_typ perfmt.;
Run;

*Assessing 'grouped' Person Type involved in fatal crash;
Proc freq data=Traffic_Fats;
	tables Motorist;
	format Motorist Motorist_fmt.;
Run;

*Assessing Sex of person involved in fatal crash;
Proc freq data=Traffic_Fats;
Tables Sex;
Run;

*Assessing hispanic race of person involved in fatal crash;
Proc freq data=Traffic_Fats;
Tables HRACE;
format hrace HRACEFMT.;
Run;

*Assessing Race of person involved in fatal crash;
Proc freq data=Traffic_Fats;
Tables RCAT;
format RCAT racefmt.;
Run;

*Assessing 'grouped' race of person involved in fatal crash;
Proc freq data=Traffic_Fats;
Tables POC;
FORMAT POC POC_fmt.;
Run;

Proc freq data=Traffic_Fats;
Tables Census_UR ;
FORMAT Census_UR Census_UR_fmt.;
Run;

Proc freq data=Traffic_Fats;
Tables BODY_TYP ;
Run;

Proc freq data=Traffic_Fats;
Tables Func_System;
FORMAT Func_System Func_fmt. ;
Run;

Proc freq data=Traffic_Fats;
Tables LGT_COND;
Run;

Proc Freq data = Traffic_Fats;
	tables Light;
	format Light Light_fmt.;
Run;

Proc freq data=Traffic_Fats;
Tables WEATHER;
Run;

PROC FREQ DATA= Traffic_Fats;
	TABLES OUTCOME;
	FORMAT OUTCOME OUTCOME_FMT.;
RUN;

PROC FREQ DATA= Traffic_Fats;
	TABLES DEPENDENT;
	FORMAT DEPENDENT DEPENDENT_FMT.;
RUN;

PROC FREQ DATA= Traffic_Fats;
	TABLES MINORITY;
	FORMAT MINORITY MINORITY_FMT.;
RUN;

** Exploratory Analysis**;

Proc sort data=Traffic_Fats;
	By POC;
Run;

*** Visualize Exploration ;
proc sgplot data=Traffic_Fats;
	scatter x=Year y=AGE;
run;

* Explore bi-variate analysis via chi-square test;

Proc freq data=Traffic_Fats;
	tables POC*Motorist/chisq;
	format POC POC_fmt. Motorist Motorist_fmt.;
Run;

Proc freq data=Traffic_Fats;
	tables POC*Func_System/chisq;
	format POC POC_fmt. Func_System Func_fmt.;
Run;

Proc freq data=Traffic_Fats;
	tables POC*Census_UR/chisq;
	format POC POC_fmt. Census_UR Census_UR_fmt.;
Run;

Proc freq data=Traffic_Fats;
	tables POC*Year/chisq;
	format POC POC_fmt.;
Run;

Proc freq data=Traffic_Fats;
	tables Motorist*Year/chisq;
	format Motorist Motorist_fmt.;
Run;

Proc sort data=Traffic_Fats;
	by POC;
Run;

Proc freq data=Traffic_Fats;
	tables Census_UR Func_System Light Sex;
	by POC;
	Where Motorist=0;
	format Census_UR Census_UR_fmt. Func_System Func_fmt. Light Light_fmt. POC POC_fmt. Motorist Motorist_fmt.;
Run;

Proc sort data=Traffic_Fats;
	by Motorist;
Run;

Proc freq data=Traffic_Fats;
	tables Year;
	by Motorist;
	format Motorist Motorist_fmt.;
Run;

Proc means mean data=Traffic_Fats;
	var age;
	by POC;
	Where Motorist=0;
format POC POC_fmt. ;
Run;



*/Visualize this data/;

Title "Trends of People of Color Fatalities per Year";
proc sgplot data=Traffic_Fats;
	VBAR Year/group=POC;
	format POC POC_fmt.;
	where POC=1;
Run;



*Logit Model predicting Non-motorist fatalities risks, BY RACE.;
title 'Stepwise Regression on Traffic Fatality Data';
proc logistic data= Traffic_Fats descending;
class OUTCOME (ref="White Non-Motorist") Census_UR (ref="Rural")Func_System (ref="Principal Arterial: Non-Interstate") Body (ref='Passanger Car') Sex (ref='Male') 
	  Light (ref="Daylight")/param=glm; 
model OUTCOME = Age Sex Census_UR Func_System TRAV_SP Light Year Census_UR*Func_System Age*TRAV_SP
/ firth lackfit;
oddsratio AGE;
oddsratio sex;
oddsratio Census_UR;
oddsratio Func_System;
oddsratio TRAV_SP;
oddsratio Light;
oddsratio Year;
format OUTCOME OUTCOME_FMT. Census_UR Census_UR_fmt. Func_System Func_fmt. Body Bodyfmt.  Light  Light_fmt.;
store logit_model;
output out = Racial_NMF pred= PredPOC_NMF;
ods output OddsRatiosWald= ORPlot;
run;


*Visualization of Odds Ratio;

proc logistic plots=oddsratio(logbase=10) /* specify log scale */

data= Traffic_Fats descending;
class OUTCOME (ref="White Non-Motorist") Census_UR (ref="Rural")Func_System (ref="Principal Arterial: Non-Interstate") Body (ref='Passanger Car') Sex (ref='Male') 
	  Light (ref="Daylight")/param=glm; 
model OUTCOME = Age Sex Census_UR Func_System TRAV_SP Light Year Census_UR*Func_System Age*TRAV_SP
/ firth lackfit;
oddsratio AGE;
oddsratio sex;
oddsratio Census_UR;
oddsratio Func_System;
oddsratio TRAV_SP;
oddsratio Light;
oddsratio Year;
format OUTCOME OUTCOME_FMT. Census_UR Census_UR_fmt. Func_System Func_fmt. Body Bodyfmt.  Light  Light_fmt.;
store logit_model;
output out = Racial_NMF pred= PredPOC_NMF;
ods output OddsRatiosWald= ORPlot2;
run;

title "Odds Ratios with 95% Wald Confidence Limits";
proc sgplot data=ORPlot2 noautolegend;
   scatter y=Effect x=OddsRatioEst / xerrorlower=LowerCL xerrorupper=UpperCL
           markerattrs=(symbol=diamondfilled);
   refline 1 / axis=x;
   xaxis grid type=log label="Odds Ratio (log scale 10)";  /* specify log scale */
   yaxis grid display=(nolabel) discreteorder=data reverse;
run;

*Visualize this model;
ods graphics  / width=8in height=6in border=off;
proc plm source = logit_model;
  effectplot fit (x=TRAV_SP plotby=LIGHT);
  title "Prediction of POC Non-Motorist Fatality Rates, Function of AGE, given Func_System.";
run;
ods graphics off;



*** Visualize predicted values. ;
proc sort data=Racial_NMF;
	by Census_UR;
Run;
proc sgplot data=Racial_NMF;
	scatter x=Year y=PredPOC_NMF;
	by Census_UR;
run;


*Visualize predictions with 95% CI;

proc sgplot data=Racial_NMF;
 pbspline x= Year
 y=PredPOC_NMF/group=Outcome
 CLM alpha=0.05 NKNOTS=20 NOLEGCLM;
 xaxis grid;
 yaxis grid;
 title Predicted Non-Motorist Fatality Incidence, as a Function of Year and Race;
run;
